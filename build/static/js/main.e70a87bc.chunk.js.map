{"version":3,"sources":["components/navbar.js","components/questions-list.js","client/index.js","views/login.js","views/signup.js","views/question.js","views/questions.js","App.js","index.js"],"names":["CustomNavbar","isLogged","setIsLogged","Navbar","bg","variant","Brand","Nav","className","to","Link","as","Button","onClick","localStorage","removeItem","QuestionsList","props","questions","map","question","Card","key","id","Header","Body","Title","title","Text","description","client","axios","create","baseURL","timeout","headers","Authorization","getItem","Login","history","useHistory","useState","password","setPassword","email","setEmail","handleSubmit","event","a","preventDefault","post","then","response","setItem","data","token","push","catch","error","alert","Form","onSubmit","Group","controlId","Label","Control","onChange","target","value","type","required","placeholder","Signup","Question","Questions","setQuestions","loading","setLoading","useEffect","get","App","Container","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e70a87bc.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, Nav, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst CustomNavbar = ({ isLogged, setIsLogged }) => {\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsLogged(false);\n  };\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand>Navbar</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <Link to=\"/questions\">\n          <Nav.Link as=\"div\">Questions</Nav.Link>\n        </Link>\n      </Nav>\n      {isLogged ? (\n        <Button onClick={logout} variant=\"outline-info\">\n          Salir\n        </Button>\n      ) : (\n        <Link to=\"/login\">\n          <Button variant=\"outline-info\">Login</Button>\n        </Link>\n      )}\n    </Navbar>\n  );\n};\n\nexport default CustomNavbar;\n","import React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport * as Icons from 'react-icons/di';\n\nconst QuestionsList = (props) => {\n  return (\n    <>\n      {props.questions?.map((question) => {\n        {\n          /* const Icon = Icons[question.icon]; */\n        }\n        return (\n          <Card key={question.id}>\n            <Card.Header>{/* <Icon /> */}</Card.Header>\n            <Card.Body>\n              <Card.Title>{question.title}</Card.Title>\n              <Card.Text>{question.description}</Card.Text>\n              <Button variant=\"primary\">Ver pregunta</Button>\n            </Card.Body>\n          </Card>\n        );\n      })}\n    </>\n  );\n};\n\nexport default QuestionsList;\n","import axios from 'axios';\n\nconst client = axios.create({\n  baseURL: 'http://localhost:5678/api',\n  timeout: 1000,\n  headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n});\n\nexport default client;\n","import React, { useState } from 'react';\nimport client from '../client';\nimport { Form, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nconst Login = (props) => {\n  const history = useHistory();\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    client\n      .post('/auth/login', {\n        email,\n        password,\n      })\n      .then((response) => {\n        localStorage.setItem('token', response.data.token);\n        history.push('/questions');\n        props.setIsLogged(true);\n      })\n      .catch((error) => {\n        alert(error.response.data.error);\n      });\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            onChange={handleEmailChange}\n            type=\"email\"\n            required\n            placeholder=\"Enter email\"\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            onChange={handlePasswordChange}\n            type=\"password\"\n            required\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nconst Signup = () => {\n  return (\n    <>\n      <p>Signup</p>\n    </>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\n\nconst Question = () => {\n  return (\n    <>\n      <p>Question</p>\n    </>\n  );\n};\n\nexport default Question;\n","import React, { useState, useEffect } from 'react';\nimport client from '../client';\nimport QuestionsList from '../components/questions-list';\n\nconst Questions = () => {\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    client.get('/question').then((response) => {\n      setQuestions(response.data);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <>\n      {loading ? <p>Cargando...</p> : <QuestionsList questions={questions} />}\n    </>\n  );\n};\n\nexport default Questions;\n","import React, { useState } from 'react';\nimport Navbar from './components/navbar';\nimport QuestionsList from './components/questions-list';\nimport { Container } from 'react-bootstrap';\nimport Login from './views/login';\nimport Signup from './views/signup';\nimport Question from './views/question';\nimport Questions from './views/questions';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Functional Component\nconst App = () => {\n  const [isLogged, setIsLogged] = useState(localStorage.getItem('token'));\n\n  return (\n    <BrowserRouter>\n      <Navbar isLogged={isLogged} setIsLogged={setIsLogged} />\n      <Container>\n        <Switch>\n          <Route path=\"/questions\">\n            <Questions />\n          </Route>\n          <Route exact path=\"/question\">\n            <Question />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login setIsLogged={setIsLogged} />\n          </Route>\n          <Route exact path=\"/signup\">\n            <Signup />\n          </Route>\n          <Redirect to=\"/questions\" />\n        </Switch>\n      </Container>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Qu√© voy a renderizar\n// Donde lo voy a renderizar\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}